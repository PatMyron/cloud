Resources:
  Account:
    Type: AWS::ApiGateway::Account
  ApiKey:
    Type: AWS::ApiGateway::ApiKey
  ClientCertificate:
    Type: AWS::ApiGateway::ClientCertificate
  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan
  Stack:
    Type: AWS::AppStream::Stack
  Application:
    Type: AWS::CodeDeploy::Application
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/451
  DeploymentConfig:
    Type: AWS::CodeDeploy::DeploymentConfig
    Properties:
      MinimumHealthyHosts:
        Type: HOST_COUNT
        Value: 1
  UserPool:
    Type: AWS::Cognito::UserPool
  ParameterGroup:
    Type: AWS::DAX::ParameterGroup
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/452
#  Certificate:
#    Type: AWS::DMS::Certificate
  InternetGateway:
    Type: AWS::EC2::InternetGateway
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/453
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-a
  PlacementGroup:
    Type: AWS::EC2::PlacementGroup
  TransitGateway:
    Type: AWS::EC2::TransitGateway
  Repository:
    Type: AWS::ECR::Repository
  Cluster:
    Type: AWS::ECS::Cluster

# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/454
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Image: Image
          Name: Name
          Memory: 100
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/455
#  LoadBalancer:
#    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/467
#  TargetGroup:
#    Type: AWS::ElasticLoadBalancingV2::TargetGroup
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/468
  Domain:
    Type: AWS::Elasticsearch::Domain
    Properties:
      ElasticsearchClusterConfig:
        InstanceType: r3.large.elasticsearch
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/456
  Rule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(10 minutes)
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/439
#   FileSystem:
#     Type: AWS::FSx::FileSystem

  Build:
    Type: AWS::GameLift::Build

# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/466
  Classifier:
    Type: AWS::Glue::Classifier
    Properties:
      CsvClassifier:
        AllowSingleColumn: true

  AssessmentTarget:
    Type: AWS::Inspector::AssessmentTarget
  Thing:
    Type: AWS::IoT::Thing
  Channel:
    Type: AWS::IoTAnalytics::Channel
  Datastore:
    Type: AWS::IoTAnalytics::Datastore

# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/457
#   DetectorModel:
#     Type: AWS::IoTEvents::DetectorModel
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/458
#   Input:
#     Type: AWS::IoTEvents::Input

  DataLakeSettings:
    Type: AWS::LakeFormation::DataLakeSettings
  LogGroup:
    Type: AWS::Logs::LogGroup

# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/459
#   Channel:
#     Type: AWS::MediaLive::Channel
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/460
#   Input:
#     Type: AWS::MediaLive::Input
# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/461
  InputSecurityGroup:
    Type: AWS::MediaLive::InputSecurityGroup
    Properties:
      WhitelistRules:
        - Cidr: 0.0.0.0/0

  DBCluster:
    Type: AWS::Neptune::DBCluster
  Fleet:
    Type: AWS::RoboMaker::Fleet

# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/465
#   RecordSetGroup:
#     Type: AWS::Route53::RecordSetGroup

  NotebookInstanceLifecycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig

# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/462
#   Workteam:
#     Type: AWS::SageMaker::Workteam

  Secret:
    Type: AWS::SecretsManager::Secret
  Hub:
    Type: AWS::SecurityHub::Hub

# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/463
#   Service:
#     Type: AWS::ServiceDiscovery::Service

  ConfigurationSet:
    Type: AWS::SES::ConfigurationSet
  ReceiptRuleSet:
    Type: AWS::SES::ReceiptRuleSet

# https://github.com/awsdocs/aws-cloudformation-user-guide/pull/464
#   Template:
#     Type: AWS::SES::Template

##########################################################################################

  ElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
  Group:
    Type: AWS::IAM::Group
  User:
    Type: AWS::IAM::User
  Bucket:
    Type: AWS::S3::Bucket
  SDBDomain:
    Type: AWS::SDB::Domain
  Topic:
    Type: AWS::SNS::Topic
  Queue:
    Type: AWS::SQS::Queue
  WaitConditionHandle:
    Type: AWS::CloudFormation::WaitConditionHandle

# A ResourceSignal CreationPolicy or WaitConditionHandle must be defined
#  WaitCondition:
#    Type: AWS::CloudFormation::WaitCondition

##########################################################################################

  Ledger:
    Type: AWS::QLDB::Ledger
    Properties:
      PermissionsMode: ALLOW_ALL
  ResourceShare:
    Type: AWS::RAM::ResourceShare
    Properties:
      Name: Name
  Container:
    Type: AWS::MediaStore::Container
    Properties:
      ContainerName: ContainerName
  CodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: RepositoryName
  EnvironmentEC2:
    Type: AWS::Cloud9::EnvironmentEC2
    Properties:
      InstanceType: t3.small
# [Exception=InvalidParameterException] Failed to call CreateBudget for [AccountId: ] - Unable to create/update budget - please provide one of the followings: Budget Limit/ Planned Budget Limit (Service: AWSBudgets; Status Code: 400; Error Code: InvalidParameterException; Request ID: )
  Budget:
    Type: AWS::Budgets::Budget
    Properties:
      Budget:
        BudgetType: COST
        TimeUnit: ANNUALLY
        BudgetLimit:
          Amount: 1
          Unit: USD
  NamedQuery:
    Type: AWS::Athena::NamedQuery
    Properties:
      Database: Database
      QueryString: QueryString
  CodeRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties:
      GitConfig:
        RepositoryUrl: https://github.com/patmyron/cloud
  App:
    Type: AWS::Amplify::App
    Properties:
      Name: Name
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Name
  Mesh:
    Type: AWS::AppMesh::Mesh
    Properties:
      MeshName: MeshName
  AppStreamUser:
    Type: AWS::AppStream::User
    Properties:
      UserName: UserName@UserName.com
      AuthenticationType: USERPOOL
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: Name
      AuthenticationType: API_KEY
  BackupVault:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: BackupVaultName
  HttpNamespace:
    Type: AWS::ServiceDiscovery::HttpNamespace
    Properties:
      Name: Name
  PublicDnsNamespace:
    Type: AWS::ServiceDiscovery::PublicDnsNamespace
    Properties:
      Name: name.com
  EventBusPolicy:
    Type: AWS::Events::EventBusPolicy
    Properties:
      Action: events:PutEvents
      Principal: '*'
      StatementId: StatementId
  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
  AggregationAuthorization:
    Type: AWS::Config::AggregationAuthorization
    Properties:
      AuthorizedAccountId: !Ref AWS::AccountId
      AuthorizedAwsRegion: !Ref AWS::Region
  ConfigurationAggregator:
    Type: AWS::Config::ConfigurationAggregator
    Properties:
      ConfigurationAggregatorName: ConfigurationAggregatorName
      AccountAggregationSources:
        - AccountIds:
          - !Ref AWS::AccountId
          AllAwsRegions: true
  DocDBDBCluster:
    Type: AWS::DocDB::DBCluster
    Properties:
      MasterUsername: MasterUsername
      MasterUserPassword: MasterUserPassword
  CustomerGateway:
    Type: AWS::EC2::CustomerGateway
    Properties:
      IpAddress: 1.2.3.4
      Type: ipsec.1
      BgpAsn: 65000
  DHCPOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainNameServers:
        - AmazonProvidedDNS
  EIP:
    Type: AWS::EC2::EIP
  Host:
    Type: AWS::EC2::Host
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      InstanceType: c5.large
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: GroupDescription
  Volume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 4
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
  VPNGateway:
    Type: AWS::EC2::VPNGateway
    Properties:
      Type: ipsec.1
  FileSystem:
    Type: AWS::EFS::FileSystem
  ElastiCacheParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      Description: Description
      CacheParameterGroupFamily: redis5.0
  ElastiCacheSecurityGroup:
    Type: AWS::ElastiCache::SecurityGroup
    Properties:
      Description: Description
  Alias:
    Type: AWS::GameLift::Alias
    Properties:
      Name: Name
      RoutingStrategy:
        Type: TERMINAL
        Message: Message
  Workflow:
    Type: AWS::Glue::Workflow
    Properties:
      Name: Name
  ManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
  ResourceGroup:
    Type: AWS::Inspector::ResourceGroup
    Properties:
      ResourceGroupTags:
        - Key: Key
          Value: Value
  Policy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
  ConnectorDefinition:
    Type: AWS::Greengrass::ConnectorDefinition
    Properties:
      Name: Name
  CoreDefinition:
    Type: AWS::Greengrass::CoreDefinition
    Properties:
      Name: Name
  DeviceDefinition:
    Type: AWS::Greengrass::DeviceDefinition
    Properties:
      Name: Name
  FunctionDefinition:
    Type: AWS::Greengrass::FunctionDefinition
    Properties:
      Name: Name
  GreengrassGroup:
    Type: AWS::Greengrass::Group
    Properties:
      Name: Name
  LoggerDefinition:
    Type: AWS::Greengrass::LoggerDefinition
    Properties:
      Name: Name
  ResourceDefinition:
    Type: AWS::Greengrass::ResourceDefinition
    Properties:
      Name: Name
  SubscriptionDefinition:
    Type: AWS::Greengrass::SubscriptionDefinition
    Properties:
      Name: Name
  Stream:
    Type: AWS::Kinesis::Stream
    Properties:
      ShardCount: 1
  Key:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'
            Principal: '*'
  PinpointApp:
    Type: AWS::Pinpoint::App
    Properties:
      Name: Name
  PinpointEmailConfigurationSet:
    Type: AWS::PinpointEmail::ConfigurationSet
    Properties:
      Name: Name
  DedicatedIpPool:
    Type: AWS::PinpointEmail::DedicatedIpPool
  Identity:
    Type: AWS::PinpointEmail::Identity
    Properties:
      Name: Name
  ByteMatchSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Properties:
      Name: Name
  GeoMatchSet:
    Type: AWS::WAFRegional::GeoMatchSet
    Properties:
      Name: Name
  IPSet:
    Type: AWS::WAFRegional::IPSet
    Properties:
      Name: Name
  SizeConstraintSet:
    Type: AWS::WAFRegional::SizeConstraintSet
    Properties:
      Name: Name
  SqlInjectionMatchSet:
    Type: AWS::WAFRegional::SqlInjectionMatchSet
    Properties:
      Name: Name
  XssMatchSet:
    Type: AWS::WAFRegional::XssMatchSet
    Properties:
      Name: Name
  WAFByteMatchSet:
    Type: AWS::WAF::ByteMatchSet
    Properties:
      Name: Name
  WAFIPSet:
    Type: AWS::WAF::IPSet
    Properties:
      Name: Name
  WAFSizeConstraintSet:
    Type: AWS::WAF::SizeConstraintSet
    Properties:
      Name: Name
  WAFSqlInjectionMatchSet:
    Type: AWS::WAF::SqlInjectionMatchSet
    Properties:
      Name: Name
  WAFXssMatchSet:
    Type: AWS::WAF::XssMatchSet
    Properties:
      Name: Name
  Server:
    Type: AWS::Transfer::Server
  Parameter:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: Value
  Activity:
    Type: AWS::StepFunctions::Activity
    Properties:
      Name: Name
  Portfolio:
    Type: AWS::ServiceCatalog::Portfolio
    Properties:
      DisplayName: DisplayName
      ProviderName: ProviderName
  TagOption:
    Type: AWS::ServiceCatalog::TagOption
    Properties:
      Key: Key
      Value: Value
  HealthCheck:
    Type: AWS::Route53::HealthCheck
    Properties:
      HealthCheckConfig:
        Type: HTTP
        IPAddress: 1.2.3.4
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: name.com
  RedshiftCluster:
    Type: AWS::Redshift::Cluster
    Properties:
      ClusterType: single-node
      DBName: dbname
      MasterUsername: masterusername
      MasterUserPassword: MasterUserPassword1
      NodeType: dc2.large
  ClusterParameterGroup:
    Type: AWS::Redshift::ClusterParameterGroup
    Properties:
      Description: Description
      ParameterGroupFamily: redshift-1.0
  RDSDBCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Delete
    Properties:
      Engine: aurora
      MasterUsername: MasterUsername
      MasterUserPassword: MasterUserPassword
  DBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 10
      Engine: mysql
      MasterUsername: MasterUsername
      MasterUserPassword: MasterUserPassword
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
        - AttributeName: AttributeName
          AttributeType: S
      KeySchema: 
        - AttributeName: AttributeName
          KeyType: HASH
  Broker:
    Type: AWS::AmazonMQ::Broker
    Properties:
      EngineVersion: 5.15.9
      HostInstanceType: mq.m5.large
      BrokerName: BrokerName
      DeploymentMode: SINGLE_INSTANCE
      EngineType: ACTIVEMQ
      AutoMinorVersionUpgrade: false
      PubliclyAccessible: false
      Users:
        - Username: Username
          Password: PasswordPassword
  Configuration:
    Type: AWS::AmazonMQ::Configuration
    Properties:
      EngineVersion: 5.15.9
      EngineType: ACTIVEMQ
      Name: Name
      Data:
        ? "Fn::Base64"
        : |
            <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
            <broker xmlns="http://activemq.apache.org/schema/core" start="false">
            </broker>
  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: Name
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
  DirectoryConfig:
    Type: AWS::AppStream::DirectoryConfig
    Properties:
      OrganizationalUnitDistinguishedNames:
        - OrganizationalUnitDistinguishedNames
      DirectoryName: DirectoryName.com
      ServiceAccountCredentials:
        AccountName: DirectoryName.com\AccountName
        AccountPassword: AccountPassword
  AppStreamFleet:
    Type: AWS::AppStream::Fleet
    Properties:
      InstanceType: stream.standard.medium
      ImageName: Amazon-AppStream2-Sample-Image-02-04-2019
      Name: Name
      ComputeCapacity:
        DesiredInstances: 1
  ImageBuilder:
    Type: AWS::AppStream::ImageBuilder
    Properties:
      InstanceType: stream.standard.medium
      ImageName: Amazon-AppStream2-Sample-Image-02-04-2019
      Name: Name
  JobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      ContainerProperties:
        Memory: 4
        Vcpus: 1
        Image: nvidia/cuda
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Comment
# Property PipelineObjects cannot be empty.
#  Pipeline:
#    Type: AWS::DataPipeline::Pipeline
#    Properties:
#      Name: Name
